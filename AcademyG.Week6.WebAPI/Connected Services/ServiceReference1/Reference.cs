//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/AcademyG.Week6.Core.Model")]
    public partial class Cliente : object
    {
        
        private string CodiceClienteField;
        
        private string CognomeField;
        
        private int IdField;
        
        private string NomeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodiceCliente
        {
            get
            {
                return this.CodiceClienteField;
            }
            set
            {
                this.CodiceClienteField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cognome
        {
            get
            {
                return this.CognomeField;
            }
            set
            {
                this.CognomeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome
        {
            get
            {
                return this.NomeField;
            }
            set
            {
                this.NomeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IClienteService")]
    public interface IClienteService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/ListaClienti", ReplyAction="http://tempuri.org/IClienteService/ListaClientiResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.Cliente>> ListaClientiAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/ClienteById", ReplyAction="http://tempuri.org/IClienteService/ClienteByIdResponse")]
        System.Threading.Tasks.Task<ServiceReference1.Cliente> ClienteByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/AggiungiCliente", ReplyAction="http://tempuri.org/IClienteService/AggiungiClienteResponse")]
        System.Threading.Tasks.Task<bool> AggiungiClienteAsync(ServiceReference1.Cliente newCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/ModificaCliente", ReplyAction="http://tempuri.org/IClienteService/ModificaClienteResponse")]
        System.Threading.Tasks.Task<bool> ModificaClienteAsync(ServiceReference1.Cliente updatedCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/EliminaClienteById", ReplyAction="http://tempuri.org/IClienteService/EliminaClienteByIdResponse")]
        System.Threading.Tasks.Task<bool> EliminaClienteByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface IClienteServiceChannel : ServiceReference1.IClienteService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class ClienteServiceClient : System.ServiceModel.ClientBase<ServiceReference1.IClienteService>, ServiceReference1.IClienteService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ClienteServiceClient() : 
                base(ClienteServiceClient.GetDefaultBinding(), ClienteServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IClienteService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ClienteServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ClienteServiceClient.GetBindingForEndpoint(endpointConfiguration), ClienteServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ClienteServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ClienteServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ClienteServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ClienteServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ClienteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.Cliente>> ListaClientiAsync()
        {
            return base.Channel.ListaClientiAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Cliente> ClienteByIdAsync(int id)
        {
            return base.Channel.ClienteByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<bool> AggiungiClienteAsync(ServiceReference1.Cliente newCustomer)
        {
            return base.Channel.AggiungiClienteAsync(newCustomer);
        }
        
        public System.Threading.Tasks.Task<bool> ModificaClienteAsync(ServiceReference1.Cliente updatedCustomer)
        {
            return base.Channel.ModificaClienteAsync(updatedCustomer);
        }
        
        public System.Threading.Tasks.Task<bool> EliminaClienteByIdAsync(int id)
        {
            return base.Channel.EliminaClienteByIdAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IClienteService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IClienteService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/AcademyG.Week6.WCF/ClienteService/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ClienteServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IClienteService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ClienteServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IClienteService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IClienteService,
        }
    }
}
